;; -*- scheme -*-
; object definitions ...

(define-interface Overlayable
  (in-module "Awn")
  (c-name "AwnOverlayable")
  (gtype-id "AWN_TYPE_OVERLAYABLE")
)

(define-object Applet
  (in-module "Awn")
  (parent "GtkPlug")
  (c-name "AwnApplet")
  (gtype-id "AWN_TYPE_APPLET")
)

(define-object AppletSimple
  (in-module "Awn")
  (parent "AwnApplet")
  (c-name "AwnAppletSimple")
  (gtype-id "AWN_TYPE_APPLET_SIMPLE")
  (implements "AwnOverlayable")
)

(define-object Dialog
  (in-module "Awn")
  (parent "GtkWindow")
  (c-name "AwnDialog")
  (gtype-id "AWN_TYPE_DIALOG")
)

(define-object Effects
  (in-module "Awn")
  (parent "GObject")
  (c-name "AwnEffects")
  (gtype-id "AWN_TYPE_EFFECTS")
)

(define-object Icon
  (in-module "Awn")
  (parent "GtkDrawingArea")
  (c-name "AwnIcon")
  (gtype-id "AWN_TYPE_ICON")
  (implements "AwnOverlayable")
)

(define-object ThemedIcon
  (in-module "Awn")
  (parent "AwnIcon")
  (c-name "AwnThemedIcon")
  (gtype-id "AWN_TYPE_THEMED_ICON")
)

(define-object Overlay
  (in-module "Awn")
  (parent "GObject")
  (c-name "AwnOverlay")
  (gtype-id "AWN_TYPE_OVERLAY")
)

(define-object OverlayThemedIcon
  (in-module "Awn")
  (parent "AwnOverlay")
  (c-name "AwnOverlayThemedIcon")
  (gtype-id "AWN_TYPE_OVERLAY_THEMED_ICON")
)

(define-object OverlayText
  (in-module "Awn")
  (parent "AwnOverlay")
  (c-name "AwnOverlayText")
  (gtype-id "AWN_TYPE_OVERLAY_TEXT")
)

(define-object OverlayThrobber
  (in-module "Awn")
  (parent "AwnOverlay")
  (c-name "AwnOverlayThrobber")
  (gtype-id "AWN_TYPE_OVERLAY_THROBBER")
)

(define-object OverlayPixbuf
  (in-module "Awn")
  (parent "AwnOverlay")
  (c-name "AwnOverlayPixbuf")
  (gtype-id "AWN_TYPE_OVERLAY_PIXBUF")
)

(define-object OverlayPixbufFile
  (in-module "Awn")
  (parent "AwnOverlayPixbuf")
  (c-name "AwnOverlayPixbufFile")
  (gtype-id "AWN_TYPE_OVERLAY_PIXBUF_FILE")
)

(define-object Tooltip
  (in-module "Awn")
  (parent "GtkWindow")
  (c-name "AwnTooltip")
  (gtype-id "AWN_TYPE_TOOLTIP")
)

;; Boxed types ...
(define-boxed Config
  (in-module "Awn")
  (c-name "AwnConfigClient")
  (gtype-id "AWN_TYPE_CONFIG_CLIENT")
)

(define-boxed DesktopItem
  (in-module "Awn")
  (c-name "AwnDesktopItem")
  (gtype-id "AWN_TYPE_DESKTOP_ITEM")
  (copy-func "awn_desktop_item_copy")
  (release-func "awn_desktop_item_free")
)

;; Enumerations and flags ...

(define-flags CairoRoundCorners
  (in-module "Awn")
  (c-name "AwnCairoRoundCorners")
  (gtype-id "AWN_TYPE_CAIRO_ROUND_CORNERS")
  (values
    '("none" "ROUND_NONE")
    '("top-left" "ROUND_TOP_LEFT")
    '("top-right" "ROUND_TOP_RIGHT")
    '("bottom-right" "ROUND_BOTTOM_RIGHT")
    '("bottom-left" "ROUND_BOTTOM_LEFT")
    '("top" "ROUND_TOP")
    '("bottom" "ROUND_BOTTOM")
    '("left" "ROUND_LEFT")
    '("right" "ROUND_RIGHT")
    '("all" "ROUND_ALL")
  )
)

(define-flags AppletFlags
  (in-module "Awn")
  (c-name "AwnAppletFlags")
  (gtype-id "AWN_TYPE_APPLET_FLAGS")
  (values
    '("flags-none" "AWN_APPLET_FLAGS_NONE")
    '("expand-minor" "AWN_APPLET_EXPAND_MINOR")
    '("expand-major" "AWN_APPLET_EXPAND_MAJOR")
    '("is-expander" "AWN_APPLET_IS_EXPANDER")
    '("is-separator" "AWN_APPLET_IS_SEPARATOR")
  )
)

(define-enum Orientation
  (in-module "Awn")
  (c-name "AwnOrientation")
  (gtype-id "AWN_TYPE_ORIENTATION")
  (values
    '("bottom" "AWN_ORIENTATION_BOTTOM")
    '("top" "AWN_ORIENTATION_TOP")
    '("right" "AWN_ORIENTATION_RIGHT")
    '("left" "AWN_ORIENTATION_LEFT")
  )
)

(define-enum Effect
  (in-module "Awn")
  (c-name "AwnEffect")
  (gtype-id "AWN_TYPE_EFFECT")
  (values
    '("none" "AWN_EFFECT_NONE")
    '("opening" "AWN_EFFECT_OPENING")
    '("launching" "AWN_EFFECT_LAUNCHING")
    '("hover" "AWN_EFFECT_HOVER")
    '("attention" "AWN_EFFECT_ATTENTION")
    '("closing" "AWN_EFFECT_CLOSING")
    '("desaturate" "AWN_EFFECT_DESATURATE")
  )
)

(define-enum ConfigListType
  (in-module "Awn")
  (c-name "AwnConfigListType")
  (gtype-id "AWN_TYPE_CONFIG_LIST_TYPE")
  (values
    '("boolean" "AWN_CONFIG_LIST_TYPE_BOOL")
    '("float" "AWN_CONFIG_LIST_TYPE_FLOAT")
    '("integer" "AWN_CONFIG_LIST_TYPE_INT")
    '("string" "AWN_CONFIG_LIST_TYPE_STRING")
  )
)

(define-enum ConfigValueType
  (in-module "Awn")
  (c-name "AwnConfigValueType")
  (gtype-id "AWN_TYPE_CONFIG_VALUE_TYPE")
  (values
    '("null" "AWN_CONFIG_VALUE_TYPE_NULL")
    '("boolean" "AWN_CONFIG_VALUE_TYPE_BOOL")
    '("float" "AWN_CONFIG_VALUE_TYPE_FLOAT")
    '("integer" "AWN_CONFIG_VALUE_TYPE_INT")
    '("string" "AWN_CONFIG_VALUE_TYPE_STRING")
    '("list_boolean" "AWN_CONFIG_VALUE_TYPE_LIST_BOOL")
    '("list_float" "AWN_CONFIG_VALUE_TYPE_LIST_FLOAT")
    '("list_integer" "AWN_CONFIG_VALUE_TYPE_LIST_INT")
    '("list_string" "AWN_CONFIG_VALUE_TYPE_LIST_STRING")
  )
)

;; From awn-dialog.h

(define-function dialog_new
  (is-constructor-of "AwnDialog")
  (c-name "awn_dialog_new")
  (return-type "GtkWidget*")
  (properties
    '("anchor" (optional) (argname "anchor"))
    '("anchor-applet" (optional) (argname "anchor-applet"))
  )
)

;; From awn-config-client.h

(define-function config_client_new
  (c-name "awn_config_client_new")
  (is-constructor-of "AwnConfigClient")
  (return-type "AwnConfigClient*")
)

(define-method clear
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_clear")
  (return-type "none")
  (parameters
    '("GError**" "opt_error")
  )
)

(define-method ensure_group
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_ensure_group")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
  )
)

(define-method notify_add
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_notify_add")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("AwnConfigClientNotifyFunc" "callback")
    '("gpointer" "data")
  )
)

(define-method exists
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_entry_exists")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
  )
)

(define-method get_value_type
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_get_value_type")
  (return-type "AwnConfigValueType")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("GError**" "opt_error")
  )
)

(define-method set_bool
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_set_bool")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("gboolean" "the_bool")
    '("GError**" "opt_error")
  )
)

(define-method set_int
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_set_int")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("gint" "the_int")
    '("GError**" "opt_error")
  )
)

(define-method set_string
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_set_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("const-gchar*" "the_string")
    '("GError**" "opt_error")
  )
)

(define-method set_float
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_set_float")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("gdouble" "the_float")
    '("GError**" "opt_error")
  )
)

(define-method set_list
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_set_list")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("GConfValueType" "list_type")
    '("GSList*" "list")
    '("GError**" "opt_error")
  )
)

(define-method get_bool
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_get_bool")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("GError**" "opt_error")
  )
)

(define-method get_int
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_get_int")
  (return-type "gint")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("GError**" "opt_error")
  )
)

(define-method get_string
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_get_string")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("GError**" "opt_error")
  )
)

(define-method get_float
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_get_float")
  (return-type "gfloat")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("GError**" "opt_error")
  )
)

(define-method get_list
  (of-object "AwnConfigClient")
  (c-name "awn_config_client_get_list")
  (return-type "GSList*")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
    '("AwnConfigListType" "list_type")
    '("GError**" "opt_error")
  )
)

(define-function config_key_lock_open
  (c-name "awn_config_client_key_lock_open")
  (return-type "int")
  (parameters
    '("const-gchar*" "group")
    '("const-gchar*" "key")
  )
)

(define-function config_key_lock
  (c-name "awn_config_client_key_lock")
  (return-type "none")
  (parameters
    '("int" "fd")
    '("int" "operation")
  )
)

(define-function config_key_lock_close
  (c-name "awn_config_client_key_lock_close")
  (return-type "none")
  (parameters
    '("int" "fd")
  )
)



;; From awn-applet.h

(define-function awn_applet_get_type
  (c-name "awn_applet_get_type")
  (return-type "GType")
)

(define-function awn_applet_new
  (c-name "awn_applet_new")
  (is-constructor-of "AwnApplet")
  (return-type "GtkWidget*")
  (properties
    '("uid" (argname "uid"))
    '("orient" (argname "orient"))
    '("offset" (argname "offset"))
    '("size" (argname "size"))
  )
)

(define-method get_orientation
  (of-object "AwnApplet")
  (c-name "awn_applet_get_orientation")
  (return-type "AwnOrientation")
)

(define-method set_orientation
  (of-object "AwnApplet")
  (c-name "awn_applet_set_orientation")
  (parameters
    '("AwnOrientation" "orient")
  )
)

(define-method get_offset
  (of-object "AwnApplet")
  (c-name "awn_applet_get_offset")
  (return-type "gint")
)

(define-method get_offset_at
  (of-object "AwnApplet")
  (c-name "awn_applet_get_offset_at")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
  (return-type "gint")
)

(define-method get_size
  (of-object "AwnApplet")
  (c-name "awn_applet_get_size")
  (return-type "guint")
)

(define-method get_uid
  (of-object "AwnApplet")
  (c-name "awn_applet_get_uid")
  (return-type "const-gchar*")
)

(define-method get_flags
  (of-object "AwnApplet")
  (c-name "awn_applet_get_flags")
  (return-type "AwnAppletFlags")
)

(define-method set_flags
  (of-object "AwnApplet")
  (c-name "awn_applet_set_flags")
  (parameters
    '("AwnAppletFlags" "flags")
  )
)

(define-method inhibit_autohide
  (of-object "AwnApplet")
  (c-name "awn_applet_inhibit_autohide")
  (return-type "guint")
  (parameters
    '("const-gchar*" "reason")
  )
)

(define-method uninhibit_autohide
  (of-object "AwnApplet")
  (c-name "awn_applet_uninhibit_autohide")
  (parameters
    '("guint" "cookie")
  )
)

(define-method applet_construct
  (of-object "AwnApplet")
  (c-name "gtk_plug_construct")
  (parameters
    '("GdkNativeWindow" "id")
  )
)

(define-method set_panel_window_id
  (of-object "AwnApplet")
  (c-name "awn_applet_set_panel_window_id")
  (parameters
    '("GdkNativeWindow" "id")
  )
)

(define-method create_default_menu
  (of-object "AwnApplet")
  (c-name "awn_applet_create_default_menu")
  (return-type "GtkWidget*")
)

(define-function create_pref_item
  (c-name "awn_applet_create_pref_item")
  (return-type "GtkWidget*")
)

;; From awn-applet-simple.h

(define-function awn_applet_simple_get_type
  (c-name "awn_applet_simple_get_type")
  (return-type "GType")
)

(define-function awn_applet_simple_new
  (c-name "awn_applet_simple_new")
  (is-constructor-of "AwnAppletSimple")
  (return-type "GtkWidget*")
  (properties
    '("uid" (argname "uid"))
    '("orient" (argname "orient"))
    '("offset" (argname "offset"))
    '("size" (argname "size"))
  )
)

(define-method set_icon_pixbuf
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_icon_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_icon_context
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_icon_context")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
  )
)

(define-method set_icon_surface
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_icon_surface")
  (return-type "none")
  (parameters
    '("cairo_surface_t*" "surface")
  )
)

(define-method set_icon_name
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "applet_name")
    '("const-gchar*" "icon_name")
  )
)

(define-method set_icon_info
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_icon_info")
  (return-type "none")
  (parameters
    '("const-gchar*" "applet_name")
    '("GStrv" "states")
    '("GStrv" "icon_names")
  )
)

(define-method set_icon_state
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_icon_state")
  (return-type "none")
  (parameters
    '("const-gchar*" "state")
  )
)

(define-method set_tooltip_text
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_tooltip_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method get_tooltip_text
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_get_tooltip_text")
  (return-type "gchar*")
)

(define-method set_message
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_message")
  (return-type "none")
  (parameters
    '("const-gchar*" "message")
  )
)

(define-method get_message
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_get_message")
  (return-type "gchar*")
)

(define-method set_progress
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_progress")
  (return-type "none")
  (parameters
    '("gfloat" "progress")
  )
)

(define-method get_progress
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_get_progress")
  (return-type "gfloat")
)

(define-method get_icon
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_get_icon")
  (return-type "GtkWidget*")
)

(define-method set_effect
  (of-object "AwnAppletSimple")
  (c-name "awn_applet_simple_set_effect")
  (return-type "none")
  (parameters
    '("AwnEffect" "effect")
  )
)

;; From awn-cairo-utils.h

(define-function awn_cairo_rounded_rect
  (c-name "awn_cairo_rounded_rect")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("double" "x0")
    '("double" "y0")
    '("double" "width")
    '("double" "height")
    '("double" "radius")
    '("AwnCairoRoundCorners" "state")
  )
)

(define-function awn_cairo_rounded_rect_shadow
  (c-name "awn_cairo_rounded_rect_shadow")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("double" "x0")
    '("double" "y0")
    '("double" "width")
    '("double" "height")
    '("double" "radius")
    '("AwnCairoRoundCorners" "state")
    '("double" "shadow_radius")
    '("double" "shadow_alpha")
  )
)



;; From awn-defines.h



;; From awn-desktop-item.h

(define-function awn_desktop_item_get_type
  (c-name "awn_desktop_item_get_type")
  (return-type "GType")
)

(define-function awn_desktop_item_new
  (c-name "awn_desktop_item_new")
  (is-constructor-of "AwnDesktopItem")
  (return-type "AwnDesktopItem*")
  (parameters
    '("gchar*" "filename")
  )
)

(define-method get_filename
  (c-name "awn_desktop_item_get_filename")
  (of-object "AwnDesktopItem")
  (return-type "const-gchar*")
)

(define-method get_item_type
  (c-name "awn_desktop_item_get_item_type")
  (of-object "AwnDesktopItem")
  (return-type "gchar*")
)

(define-method set_item_type
  (c-name "awn_desktop_item_set_item_type")
  (of-object "AwnDesktopItem")
  (return-type "none")
  (parameters
    '("gchar*" "item_type")
  )
)

(define-method get_icon
  (c-name "awn_desktop_item_get_icon")
  (of-object "AwnDesktopItem")
  (return-type "GdkPixbuf*")
  (parameters
    '("guint" "size")
  )
)

(define-method set_icon
  (c-name "awn_desktop_item_set_icon_name")
  (of-object "AwnDesktopItem")
  (return-type "none")
  (parameters
    '("gchar*" "icon")
  )
)

(define-method get_name
  (c-name "awn_desktop_item_get_name")
  (of-object "AwnDesktopItem")
  (return-type "gchar*")
)

(define-method set_name
  (c-name "awn_desktop_item_set_name")
  (of-object "AwnDesktopItem")
  (return-type "none")
  (parameters
    '("gchar*" "name")
  )
)

(define-method get_exec
  (c-name "awn_desktop_item_get_exec")
  (of-object "AwnDesktopItem")
  (return-type "gchar*")
)

(define-method set_exec
  (c-name "awn_desktop_item_set_exec")
  (of-object "AwnDesktopItem")
  (return-type "none")
  (parameters
    '("gchar*" "exec")
  )
)

(define-method get_string
  (c-name "awn_desktop_item_get_string")
  (of-object "AwnDesktopItem")
  (return-type "gchar*")
  (parameters
    '("gchar*" "key")
  )
)

(define-method set_string
  (c-name "awn_desktop_item_set_string")
  (of-object "AwnDesktopItem")
  (return-type "none")
  (parameters
    '("gchar*" "key")
    '("gchar*" "value")
  )
)

(define-method get_localestring
  (c-name "awn_desktop_item_get_localestring")
  (of-object "AwnDesktopItem")
  (return-type "gchar*")
  (parameters
    '("gchar*" "key")
  )
)

(define-method set_localestring
  (c-name "awn_desktop_item_set_localestring")
  (of-object "AwnDesktopItem")
  (return-type "none")
  (parameters
    '("gchar*" "key")
    '("gchar*" "locale")
    '("gchar*" "value")
  )
)

(define-method exists
  (c-name "awn_desktop_item_exists")
  (of-object "AwnDesktopItem")
  (return-type "gboolean")
)

(define-method launch
  (c-name "awn_desktop_item_launch")
  (of-object "AwnDesktopItem")
  (return-type "gint")
  (parameters
    '("GSList*" "documents")
    '("GError**" "err")
  )
)

(define-method save
  (c-name "awn_desktop_item_save")
  (of-object "AwnDesktopItem")
  (return-type "none")
  (parameters
    '("gchar*" "new_filename")
    '("GError**" "err")
  )
)

;; From awn-effects.h

(define-function awn_effects_get_type
  (c-name "awn_efffects_get_type")
  (return-type "GType")
)

(define-function effects_new_for_widget
  (c-name "awn_effects_new_for_widget")
  (is-constructor-of "AwnEffects")
  (return-type "AwnEffects*")
  (properties
    '("widget" (argname "widget"))
  )
)

(define-method start
  (of-object "AwnEffects")
  (c-name "awn_effects_start")
  (return-type "none")
  (parameters
    '("AwnEffect" "effect")
  )
)

(define-method start_ex
  (of-object "AwnEffects")
  (c-name "awn_effects_start_ex")
  (return-type "none")
  (parameters
    '("AwnEffect" "effect")
    '("int" "max_loops")
    '("gboolean" "signal_start" (default "FALSE") (null-ok))
    '("gboolean" "signal_end" (default "FALSE") (null-ok))
  )
)

(define-method stop
  (of-object "AwnEffects")
  (c-name "awn_effects_stop")
  (return-type "none")
  (parameters
    '("AwnEffect" "effect")
  )
)

(define-method cairo_create
  (of-object "AwnEffects")
  (c-name "awn_effects_cairo_create")
  (return-type "cairo_t*")
)

(define-method cairo_create_clipped
  (of-object "AwnEffects")
  (c-name "awn_effects_cairo_create_clipped")
  (parameters
    '("GdkRegion*" "region")
  )
  (return-type "cairo_t*")
)

(define-method cairo_destroy
  (of-object "AwnEffects")
  (c-name "awn_effects_cairo_destroy")
  (return-type "none")
)

(define-method set_icon_size
  (of-object "AwnEffects")
  (c-name "awn_effects_set_icon_size")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
    '("gboolean" "requestSize")
  )
)

(define-method add_overlay
  (of-object "AwnEffects")
  (c-name "awn_effects_add_overlay")
  (return-type "none")
  (parameters
    '("AwnOverlay*" "overlay")
  )
)

(define-method remove_overlay
  (of-object "AwnEffects")
  (c-name "awn_effects_remove_overlay")
  (return-type "none")
  (parameters
    '("AwnOverlay*" "overlay")
  )
)

;; From awn-enum-types.h

(define-function awn_orientation_get_type
  (c-name "awn_orientation_get_type")
  (return-type "GType")
)

(define-function awn_cairo_round_corners_get_type
  (c-name "awn_cairo_round_corners_get_type")
  (return-type "GType")
)

(define-function awn_effect_get_type
  (c-name "awn_effect_get_type")
  (return-type "GType")
)

;; From awn-icon.h

(define-function awn_icon_new
  (c-name "awn_icon_new")
  (is-constructor-of "AwnIcon")
  (return-type "GtkWidget*")
)

(define-method set_orientation
  (of-object "AwnIcon")
  (c-name "awn_icon_set_orientation")
  (return-type "none")
  (parameters
    '("AwnOrientation" "orient")
  )
)

(define-method set_offset
  (of-object "AwnIcon")
  (c-name "awn_icon_set_offset")
  (return-type "none")
  (parameters
    '("gint" "offset")
  )
)
(define-method set_effect
  (of-object "AwnIcon")
  (c-name "awn_icon_set_effect")
  (return-type "none")
  (parameters
    '("AwnEffect" "effect")
  )
)

(define-method set_from_pixbuf
  (of-object "AwnIcon")
  (c-name "awn_icon_set_from_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_from_context
  (of-object "AwnIcon")
  (c-name "awn_icon_set_from_context")
  (return-type "none")
  (parameters
    '("cairo_t*" "ctx")
  )
)

(define-method set_from_surface
  (of-object "AwnIcon")
  (c-name "awn_icon_set_from_surface")
  (return-type "none")
  (parameters
    '("cairo_surface_t*" "surface")
  )
)

(define-method set_custom_paint
  (of-object "AwnIcon")
  (c-name "awn_icon_set_custom_paint")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method get_tooltip
  (of-object "AwnIcon")
  (c-name "awn_icon_get_tooltip")
  (return-type "AwnTooltip*")
)

(define-method set_tooltip_text
  (of-object "AwnIcon")
  (c-name "awn_icon_set_tooltip_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method get_tooltip_text
  (of-object "AwnIcon")
  (c-name "awn_icon_get_tooltip_text")
  (return-type "gchar*")
)

(define-method set_message
  (of-object "AwnIcon")
  (c-name "awn_icon_set_message")
  (return-type "none")
  (parameters
    '("const-gchar*" "message")
  )
)

(define-method get_message
  (of-object "AwnIcon")
  (c-name "awn_icon_get_message")
  (return-type "gchar*")
)

(define-method set_progress
  (of-object "AwnIcon")
  (c-name "awn_icon_set_progress")
  (return-type "none")
  (parameters
    '("gfloat" "progress")
  )
)

(define-method get_progress
  (of-object "AwnIcon")
  (c-name "awn_icon_get_progress")
  (return-type "gfloat")
)

(define-method set_is_active
  (of-object "AwnIcon")
  (c-name "awn_icon_set_is_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method get_is_active
  (of-object "AwnIcon")
  (c-name "awn_icon_get_is_active")
  (return-type "gboolean")
)

(define-method set_indicator_count
  (of-object "AwnIcon")
  (c-name "awn_icon_set_indicator_count")
  (return-type "none")
  (parameters
    '("gint" "count")
  )
)

(define-method get_indicator_count
  (of-object "AwnIcon")
  (c-name "awn_icon_get_indicator_count")
  (return-type "gint")
)

;; From awn-overlay.h

(define-function awn_overlay_new
  (c-name "awn_overlay_new")
  (is-constructor-of "AwnOverlay")
  (return-type "AwnOverlay*")
)

(define-method render_overlay
  (of-object "AwnOverlay")
  (c-name "awn_overlay_render")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("cairo_t*" "cr")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method move_to
  (of-object "AwnOverlay")
  (c-name "awn_overlay_move_to")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("gint" "icon_width")
    '("gint" "icon_height")
    '("gint" "overlay_width")
    '("gint" "overlay_height")
    '("AwnOverlayCoord*" "coord")
  )
)


;; From awn-overlayable.h

(define-method get_effects
  (of-object "AwnOverlayable")
  (c-name "awn_overlayable_get_effects")
  (return-type "AwnEffects*")
)

(define-method add_overlay
  (of-object "AwnOverlayable")
  (c-name "awn_overlayable_add_overlay")
  (return-type "none")
  (parameters
    '("AwnOverlay*" "overlay")
  )
)

(define-method remove_overlay
  (of-object "AwnOverlayable")
  (c-name "awn_overlayable_remove_overlay")
  (return-type "none")
  (parameters
    '("AwnOverlay*" "overlay")
  )
)


;; From awn-overlay-text.h

(define-function awn_overlay_text_new
  (c-name "awn_overlay_text_new")
  (is-constructor-of "AwnOverlayText")
  (return-type "AwnOverlayText*")
  (properties
    '("text" (optional) (argname "text"))
  )
)

;; From awn-overlay-themed-icon.h

(define-function awn_overlay_themed_icon_new
  (c-name "awn_overlay_themed_icon_new")
  (is-constructor-of "AwnOverlayThemedIcon")
  (parameters
    '("AwnThemedIcon*" "icon")
    '("const-gchar*" "icon_name")
    '("const-gchar*" "icon_state" (default "NULL") (null-ok))
  )
)

;; From awn-overlay-throbber.h

(define-function awn_overlay_throbber_new
  (c-name "awn_overlay_throbber_new")
  (is-constructor-of "AwnOverlayThrobber")
  (return-type "AwnOverlayThrobber*")
  (properties
    '("icon" (argname "icon"))
  )
)

;; From awn-overlay-pixbuf.h

(define-function awn_overlay_pixbuf_new
  (c-name "awn_overlay_pixbuf_new")
  (is-constructor-of "AwnOverlayPixbuf")
  (return-type "AwnOverlayPixbuf*")
  (properties
    '("pixbuf" (optional) (argname "pixbuf"))
  )
)

;; From awn-overlay-pixbuf-file.h

(define-function awn_overlay_pixbuf_file_new
  (c-name "awn_overlay_pixbuf_file_new")
  (is-constructor-of "AwnOverlayPixbufFile")
  (return-type "AwnOverlayPixbufFile*")
  (properties
    '("file-name" (optional) (argname "file-name"))
  )
)

;; From awn-tooltip.h

(define-function awn_tooltip_get_type
  (c-name "awn_tooltip_get_type")
  (return-type "GType")
)

(define-function awn_tooltip_new_for_widget
  (c-name "awn_tooltip_new_for_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_text
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method get_text
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_get_text")
  (return-type "gchar*")
)

(define-method set_focus_widget
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_set_focus_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_font_name
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_set_font_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "font_name")
  )
)

(define-method set_font_color
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_set_font_color")
  (return-type "none")
  (parameters
    '("const-gchar*" "font_color")
  )
)

(define-method set_background_color
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_set_background_color")
  (return-type "none")
  (parameters
    '("const-gchar*" "bg_color")
  )
)

(define-method set_delay
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_set_delay")
  (return-type "none")
  (parameters
    '("gint" "msecs")
  )
)

(define-method get_delay
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_get_delay")
  (return-type "gint")
)

(define-method update_position
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_update_position")
  (return-type "none")
)

(define-method set_position_hint
  (of-object "AwnTooltip")
  (c-name "awn_tooltip_set_position_hint")
  (return-type "none")
  (parameters
    '("AwnOrientation" "orient")
    '("gint" "size")
  )
)

;; From awn-themed-icon.h

(define-function awn_themed_icon_get_type
  (c-name "awn_themed_icon_get_type")
  (return-type "GType")
)

(define-function awn_themed_icon_new
  (c-name "awn_themed_icon_new")
  (is-constructor-of "AwnThemedIcon")
  (return-type "GtkWidget*")
)

(define-method set_state
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_set_state")
  (return-type "none")
  (parameters
    '("const-gchar*" "state")
  )
)

(define-method get_state
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_get_state")
  (return-type "const-gchar*")
)

(define-method set_size
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_set_size")
  (return-type "none")
  (parameters
    '("gint" "size")
  )
)

(define-method get_size
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_get_size")
  (return-type "gint")
)

(define-method set_info
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_set_info")
  (return-type "none")
  (parameters
    '("const-gchar*" "applet_name")
    '("const-gchar*" "uid")
    '("GStrv" "states")
    '("GStrv" "icon_names")
  )
)

(define-method set_info_simple
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_set_info_simple")
  (return-type "none")
  (parameters
    '("const-gchar*" "applet_name")
    '("const-gchar*" "uid")
    '("const-gchar*" "icon_name")
  )
)

(define-method override_gtk_theme
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_override_gtk_theme")
  (return-type "none")
  (parameters
    '("const-gchar*" "theme_name"  (default "NULL") (null-ok))
  )
)

(define-method get_icon_at_size
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_get_icon_at_size")
  (return-type "GdkPixbuf*")
  (parameters
    '("guint" "size")
    '("const-gchar*" "state" (default "NULL") (null-ok))
  )
)

(define-method clear_icons
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_clear_icons")
  (return-type "none")
  (parameters
    '("gint" "scope")
  )
)

(define-method clear_info
  (of-object "AwnThemedIcon")
  (c-name "awn_themed_icon_clear_info")
  (return-type "none")
)

;; From awn-utils.h

(define-function awn_utils_ensure_transparent_bg
  (c-name "awn_utils_ensure_transparent_bg")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function awn_utils_make_transparent_bg
  (c-name "awn_utils_make_transparent_bg")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

;; From awn-vfs.h

(define-function vfs_init
  (c-name "awn_vfs_init")
  (return-type "none")
)



;; From stamp-awn-enum-types.h


