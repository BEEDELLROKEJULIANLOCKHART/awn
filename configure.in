AC_INIT([avant-window-navigator], [0.3.9], [https://bugs.launchpad.net/awn])

EXTRA_VERSION=
AC_ARG_ENABLE([extra-version],
              AS_HELP_STRING([--enable-extra-version],
                             [Adds a custom string to the end of the version. Useful for packagers.]),
              [EXTRA_VERSION="$enableval"])
AC_SUBST(EXTRA_VERSION)
AC_DEFINE_UNQUOTED([EXTRA_VERSION], ["$EXTRA_VERSION"],
                   [Extra version metadata provided by ./configure])

AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_SRCDIR([.])
AC_CONFIG_HEADERS([config.h])

m4_define(pycairo_required_version,      1.0.2) dnl or 1.1.7
m4_define(pygtk_required_version,        2.10.0)

AM_INIT_AUTOMAKE([1.8])
AM_MAINTAINER_MODE

AC_SUBST([ACLOCAL_AMFLAGS], ["\${ACLOCAL_FLAGS}"])

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL

dnl ==============================================
dnl GTK-Doc
dnl ==============================================

GTK_DOC_CHECK(1.4)

dnl ==============================================
dnl Python support
dnl ==============================================

AC_PYTHON_DEVEL(2.3.5)

PLATFORM=`$PYTHON -c "from distutils import util; print util.get_platform()"`
AC_SUBST(PLATFORM)

dnl ==============================================
dnl PyGTK
dnl ==============================================
PKG_CHECK_MODULES(PYGTK, gtk+-2.0 pygtk-2.0 >= pygtk_required_version)
AC_SUBST(PYGTK_CFLAGS)
AC_PATH_PROG(PYGTK_CODEGEN, pygtk-codegen-2.0, no)
if test "x$PYGTK_CODEGEN" = "xno"; then
  AC_MSG_ERROR([could not find pygtk-codegen-2.0 script])
fi

AC_MSG_CHECKING(for pygtk defs)
PYGTK_DEFSDIR=`$PKG_CONFIG --variable=defsdir pygtk-2.0`
AC_SUBST(PYGTK_DEFSDIR)
AC_MSG_RESULT($PYGTK_DEFSDIR)

PKG_CHECK_MODULES(PYCAIRO, pycairo >= pycairo_required_version)
AC_SUBST(PYCAIRO_CFLAGS)
AC_SUBST(PYCAIRO_LIBS)
PYGTK_CODEGEN_DEFINES="-DHAVE_PYCAIRO $PYGTK_CODEGEN_DEFINES";
AC_DEFINE([HAVE_PYCAIRO], [1], [Define to 1 if pycairo is available])

dnl ==============================================
dnl Vala support
dnl ==============================================

AC_ARG_WITH(vala, AS_HELP_STRING([--with-vala],[Enables installation of the Vala bindings]),,[with_vala=no])

if test "$with_vala" != "no"; then
  VALA_PROG_VALAC(0.7.2)
  AC_PATH_PROG(VAPIGEN, vapigen, vapigen, [])
fi
AM_CONDITIONAL(HAVE_VALA, test -n "$VALAC" -a -n "$VAPIGEN")

dnl ==============================================
dnl Check for Python modules
dnl ==============================================
AC_ARG_ENABLE(pymod_checks, 
              AC_HELP_STRING([--disable-pymod-checks], [Disable checks for Python modules]),
              enable_pymod_checks=$enableval,
              enable_pymod_checks=yes)
              
if test x${enable_pymod_checks} = xyes; then
  AM_CHECK_PYMOD(gtk.glade,,,AC_MSG_ERROR([pygtk's gtk.glade module is needed for awn-manager's user interface]))
  AM_CHECK_PYMOD(xdg,,,AC_MSG_ERROR([The xdg python module is required (pyxdg or python-xdg)]))
fi

dnl ==============================================
dnl CFLAGS
dnl ==============================================

STANDARD_CPPFLAGS="-std=c99 -D_XOPEN_SOURCE -D_GNU_SOURCE"
if test "$USE_MAINTAINER_MODE" = "yes"; then
  AS_COMPILER_FLAGS([WARNING_FLAGS], ["-Werror=all -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -Werror=missing-declarations -Wredundant-decls -Wmissing-noreturn -Werror=shadow -Wpointer-arith -Wcast-align -Wwrite-strings -Werror=inline -Wformat -Wformat-nonliteral -Wformat-security -Winit-self -Werror=missing-include-dirs -Werror=undef -Werror=aggregate-return -Wmissing-format-attribute -Werror=nested-externs -pedantic -fno-strict-aliasing -fmessage-length=0 -Wp,-D_FORTIFY_SOURCE=2"])
  DISABLE_DEPRECATED_FLAGS="-DG_DISABLE_DEPRECATED -DG_DISABLE_SINGLE_INCLUDES -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_DEPRECATED -DGTK_DISABLE_SINGLE_INCLUDES"
else
  AS_COMPILER_FLAGS([WARNING_FLAGS], ["-Wall"])
fi
AC_SUBST(STANDARD_CPPFLAGS)
AC_SUBST(WARNING_FLAGS)
AC_SUBST(DISABLE_DEPRECATED_FLAGS)

dnl ==============================================
dnl translation support
dnl ==============================================

GETTEXT_PACKAGE=avant-window-navigator
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])
ALL_LINGUAS="af ar be bg bn bs ca csb cs da de el en_AU en_CA en_GB eo es et eu fa fi fr ga gl gu he hi hr hu id is it ja jv ka ko ku lt lv mk mr ms nb nds nl nn oc pl pt_BR pt ro ru sk sl sq sr sv ta te th tr uk vi zh_CN zh_HK zh_TW"

IT_PROG_INTLTOOL([0.34])
AM_GLIB_GNU_GETTEXT

slicelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(slicelocaledir)

dnl ==============================================
dnl Check that we meet the dependencies
dnl ==============================================
AM_PATH_GLIB_2_0(2.8.0,,,gobject)

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal, glib-genmarshal)

dnl ==============================================
dnl Configuration backend
dnl ==============================================
AC_MSG_CHECKING([for config backend support])
AC_ARG_WITH(gconf,
            AS_HELP_STRING([--with-gconf],
                           [Use GConf to store configuration information]),
            [if test "$with_gconf" == "no"; then
                # use Glib's GKeyFile - it's already pulled in.
                CFG_MODULE=""
                CFG_BACKEND_NAME="GKeyFile"
                GCONF_SCHEMA_INSTALL_SOURCE="/dev/null"
                GCONF_SCHEMA_FILE_DIR="/dev/null"
                AC_MSG_RESULT([GKeyFile (part of Glib)])
            fi])
if test "$with_gconf" != "no"; then
    CFG_MODULE="gconf-2.0"
    CFG_BACKEND_NAME="GConf"
    AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
    if test x"$GCONFTOOL" = xno; then
        AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
    fi
    AC_DEFINE([USE_GCONF], 1, [Use GConf to store configuration information])
    AC_MSG_RESULT([GConf])
fi
AC_SUBST(CFG_BACKEND_NAME)
AM_CONDITIONAL(USE_GCONF, test "$with_gconf" != "no")

LIBRARY_MODULES="glib-2.0 >= 2.8.0 gthread-2.0 gobject-2.0 gtk+-2.0 >= 2.12 gdk-2.0 >= 2.12 dbus-glib-1 $CFG_MODULE desktop-agnostic"
DOCK_MODULES="libwnck-1.0 x11 xproto xcomposite xrender"
TASKMANAGER_MODULES="libwnck-1.0 x11"
AC_SUBST(LIBRARY_MODULES)

AC_DEFINE(HAVE_LIBWNCK_220, 1, [Have new libwnck])

PKG_CHECK_MODULES(AWN, [$LIBRARY_MODULES])
PKG_CHECK_MODULES(DOCK, [$DOCK_MODULES])
PKG_CHECK_MODULES(TASKMANAGER, [$LIBRARY_MODULES $TASKMANAGER_MODULES])

dnl =============================================
dnl GObject Intropsection
dnl =============================================

GOBJECT_INTROSPECTION_CHECK([0.6.3])

dnl =============================================
dnl Startup notification check (eggdesktopfile)
dnl =============================================

old_LIBS="$LIBS"
LIBS="$LIBS $AWN_LIBS"
AC_CHECK_FUNCS(gdk_x11_display_broadcast_startup_message)
LIBS="$old_LIBS"

dnl ==============================================
dnl DBus
dnl ==============================================

DBUS_GLIB_BIN="`$PKG_CONFIG --variable=exec_prefix dbus-glib-1`/bin"
AC_SUBST(DBUS_GLIB_BIN)

dnl ==============================================
dnl GConf
dnl ==============================================
AM_GCONF_SOURCE_2

dnl ==============================================
dnl Miscellaneous
dnl ==============================================

AS_AC_EXPAND([PY_SITE_PKG], [$PYTHON_SITE_PKG])
AS_AC_EXPAND([PY_PLAT_PKG], [$PYTHON_PLATFORM_PKG])
AS_AC_EXPAND([PKGDATADIR], [$datadir/$PACKAGE_NAME])
AS_AC_EXPAND([DATADIR], [$datadir])
AS_AC_EXPAND([LIBDIR], [$libdir])
AS_AC_EXPAND([APPLETDIR], [$libdir/awn/applets])
AS_AC_EXPAND([APPLETDATADIR], [$PKGDATADIR/applets])

SHAVE_INIT([shave], [enable])

dnl ==============================================
dnl Output
dnl ==============================================

dnl Please keep alphabetized (case-sensitive)
AC_OUTPUT([
Makefile
applets/Makefile
applets/taskmanager/Makefile
applets/taskmanager/taskmanager.desktop.in
awn.pc
awn-applet-activation/Makefile
awn-manager/Makefile
awn-manager/awn-launcher-editor
awn-manager/awn-manager.desktop.in
awn-manager/awn-manager-mini.desktop.in
awn-manager/awnDefs.py
awn-manager/awnManager.py
awn-manager/awnManagerMini.py
bindings/Makefile
bindings/python/Makefile
bindings/vala/Makefile
data/Makefile
data/active/Makefile
data/avant-window-navigator.desktop.in
data/awn.schema-ini
doc/Makefile
doc/reference/Makefile
libawn/Makefile
libawn/anims/Makefile
po/Makefile.in
shave/shave
shave/shave-libtool
src/Makefile
tests/Makefile
themes/Makefile
])

dnl ========================================================================

echo ""
echo "             Avant Window Navigator $VERSION"
echo "             ============================"
echo ""
echo "                   prefix:   ${prefix}"
echo ""
echo "    Configuration Backend:   $CFG_BACKEND_NAME"
echo ""
echo "             Vala Support:   ${with_vala}"
echo ""
echo "            Documentation:   ${enable_gtk_doc}"
echo ""
